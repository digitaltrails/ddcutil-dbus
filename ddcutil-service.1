.TH ddcutil-service 1 "ddcutil-service" "MH" \" -*- nroff -*-
.SH NAME
ddcutil-service \- D-Bus service for libddcutil VESA DDC Monitor Virtual Control Panel
.SH SYNOPSIS

.B ddcutil-service
.br
.B ddcutil-service
.I --log_info
|
.I --ddca-syslog-level=N
|
.I --ddca-init-options=M
--
[
.I libddcutil ddc_init options
]
.br
.B ddcutil-service
.I --help
|
.I --version
|
.I --introspect

.SH DESCRIPTION
.B ddcutil-service
ddcutil-service is D-Bus service wrapper for libddcutil which
implements the VESA DDC Monitor Control Command Set.  In general,
most things that can be controlled using a monitor's on-screen
display can be controlled by this service.

.P
The
.B ddctuil-service
is registered as a
.B session-service
with the
.B dbus-daemon
which starts the service on demand.
Should the service error and terminate, the
.B dbus-daemon
will automatically restart it when it is next accessed.  Client
connections with the service are stateless.

.P
For startup under
.B dbus-daemon,
the service requires no command line options.
For the purpose of testing and development, the service can be
manually started and several options are provided to assist with
such activities.  There are some info reporting options,
.B --version, --introspect,
and
.B --help,
which can be
manually run without causing any interference with the running service.


.SS OPTIONS
.TP
.B "--log_info"

Enabling log-info will produce info and debug level output.  The
out put will go to standard-error or, if running from
.B dbus-daemon,
to the journal.
This option can also be toggled after startup by using B-Bus
to alter the
service's
.B ServiceInfoLogging
property (see
.B EXAMPLES
below).

.TP
.B "--ddca-syslog-level" \fIN\fP

The DDCA syslog level numerical value is passed to
.B libddutil's ddca_init()
function at startup to enable logging from within the library.
It's only available for
.B libddutil 2.0.1+.

.TP
.B "--ddca-init-options" \fIN\fP

The DDCA init option is a numerical value is passed to
.B libddutil's ddca_init()
function at startup to enable/disable various options with the library.
It's only available for
.B libddutil 2.0.1+.

.TP
.B -- [ libddcutil ddc_init options ]
The
.B libddcutil
library also supports a set of init options, any following the
.B --
will be passed as a string to the
.B ddc_init()
function when it's called at startup.

.TP
.B "--help"

Outputs options-help and exits.

.TP
.B "‐‐version"

Outputs the service interface version and the
.B .libddutil
version and exits.

.TP
.B "--introspect"

Outputs the XML introspection text for the service and exits.

.SH SERVICE METHODS

.PP
The following is a brief summary of the methods provided by the service.


.TP
.B Detect
Return a list of monitors detected along with their properties.

.TP
.B GetVcp
Query a displays's settings by VCP code, for example, bightness is VCP code 0x10.

.TP
.B GetMultipleVcp
Query multiple VCP codes for a single display.

.TP
.B SetVcp
Set a display's settings by VCP code.

.TP
.B GetCapabiltiesMetadata
Query a displays capabilities returning a parsed data-structure describing the
features and permitted values.

.TP
.B GetCapabilitiesString
Query a displays capabilities returning a unparsed capabilities string.

.TP
.B GetVcpMetadata
Query the metadata describing a specific VCP code for a specific display.

.TP
.B GetSleepMultiplier
Get the display specific
.B ddcutil
sleep multiplier.

.TP
.B SetSleepMultiplier
Set a display specific
.B ddcutil
sleep multiplier.

.TP
.B Restart
Restart the service with specific arguments.

.PP
For convenience, if a method requires a display-argument, either an integer
.I display-number
or a
.I base64-encoded EDID
can be supplied. Base64-encoded EDIDs are obtained from the
.B Detect
method).

Run
.B ddcutil-service --introspect
for details on each method's in/out parameters. For even more
information the
.B d-feet
graphical D-Bus debugger provides a very readable
way to browse and experiment with the service interface, simply start
.B d-feet,
select the
.B Session Bus
and search for
.B ddcutil-service.

.SH SERVICE SIGNALS

The service provides a
.B ConnectedDisplaysChanged
signal which will raise a signal on the client should a displays connection
status change.  The utility and reliability of this callback is
dependent on the vagaries of specific displays, GPUs, desktops (KDE,
gnome, ...), and display servers (X11, Wayland-implementations).
.PP
Full support for this callback isn't due until
.B ddcutil 2.0.2+.

.SH SERVICE PROPERTIES

.TP
.B AttributesReturnedByDetect
Query the fieldnames returned from the
.B Detect
method.  Lists the names of the fields in the order they are
found in each struct returned from
.B Detect.

.TP
.B StatusValues
Query the list of status values returned by
.B libddcutil
along with their text names.

.TP
.B DisplayEventTypes
Query the event-types sent with the
.B ConnectedDisplaysChanged
signal along with their text names.

The service provides several D-Bus accessible properties for querying
and adjusting its operation and
.B libddcutil
internal settings.

.TP
.B ServiceInfoLogging
Enable/disable the service's diagnostic level output to include info and debug messages.

.TP
.B ServiceInterfaceVersion
Query the service interface version.

.TP
.B ServiceSignalChanges
Enable/disable the
.B ConnectedDisplaysChanged
signal for monitoring changes to the connected VDU's
(connect, disconnect, DPMS-sleep, DPMS-awake).  Also see
.B DisplayEventTypes.

.TP
.B DdcutilDynamicSleep
Enable/disable
.B libddcutil
dynamic-sleep adjustment of DDC timings.

.TP
.B DdcutilOutputLevel
Read/write the
.B libddcutil
output level.

.TP
.B DdcutilVerifySetVcp
Enable/disable
.B libddcutil
extra DDC calls to check whether VCP settings were actually applied by the monitor.

.TP
.B DdcutilVersion
Query the
.B libddcutil
version string.


.PP
Properties can be queried and set using utilities such as
.B busctl,
.B d-bus-send,
and
.B d-feet,
see
.B EXAMPLES.

.SH CONFIG FILES

.B /usr/share/dbus-1/services/com.ddcutil.DdcutilService.service
.PP
The
.B dbus-daemon
config file ensures the service is started or restarted on demand.  Typically the
contents would be as follows

.nf
    [D-BUS Service]
    Name=com.ddcutil.DdcutilService
    Exec=/usr/bin/ddcutil-service
.fi

The
.B libddcutil
library loads options from
.B $HOME/.config/ddcutil/ddcutilrc
at startup, see
.I https://www.ddcutil.com/config_file/
for details.

.SH EXAMPLES
.PP
The systemd utility
.B bustctl
can be used from the command line to interact with the service.

.B Summarise the service methods and properties:

.nf
    busctl --user introspect com.ddcutil.DdcutilService /com/ddcutil/DdcutilObject
.fi

.B Detect the connected displays:

.nf
    busctl --user call com.ddcutil.DdcutilService /com/ddcutil/DdcutilObject \\
        com.ddcutil.DdcutilInterface Detect u 0
.fi

.B Get the brightness of display-1 (VCP 0x10):

.nf
    busctl --user call com.ddcutil.DdcutilService /com/ddcutil/DdcutilObject \\
        com.ddcutil.DdcutilInterface GetVcp isyu 1 "" 0x10 0
.fi

.B Set brightness of display-1 (VCP 0x10):

.nf
    busctl --user call com.ddcutil.DdcutilService /com/ddcutil/DdcutilObject \\
        com.ddcutil.DdcutilInterface SetVcp isyqu 1 "" 16 50 0
.fi

.B Query or set the service logging level:

.nf
   busctl --user get-property com.ddcutil.DdcutilService /com/ddcutil/DdcutilObject \\
       com.ddcutil.DdcutilInterface ServiceInfoLogging

   busctl --user set-property com.ddcutil.DdcutilService /com/ddcutil/DdcutilObject \\
       com.ddcutil.DdcutilInterface ServiceInfoLogging b true
.fi

.PP
The installed service is packaged with several examples of it's use, including
.B dbus-send
scripts
and
.B python3
clients for D-Bus
.B dasbus
and
.B QtDBus
APIs.  The examples are normally be installed in:
.B /usr/share/ddcutil-service/examples/


.fi

.SH BUGS AND LIMITATIONS

Should the service exit unexpectedly, it relies on
.B daebus-deamon
for on-demand restart.  For that reason, it's not suitable for
running in production as a stand-alone daemon.

Some
.libddcutil
parameters can only be changed at process startup, if they need
to be changed the service will require a manual restart, either by
killing it with a UNIX signal, or by invoking the service's
.B Restart
menthod.

The
.B ConnectedDisplaysChanged
signal is incomplete pending future enhancements to libddcutil.

The service is currently under active development along
with supporting amendments to libddcutil by Sanford Rockowitz.
.PP
Please raise any bug reports as issues at
.I https://github.com/digitaltrails/ddcutil-service/issues
or by email to
.I michael@actrix.gen.nz.

.SH AUTHOR
Michael Hamilton (michael@actrix.gen.nz)

.SH ACKNOWLEDGEMENTS

Thanks go out to
.B Sanford Rockowitz
for
.B libddcutil,
.B ddcutil
and all the assistance and advice while working on this service.

.SH COPYRIGHT
Copyright (C) 2033 Michael Hamilton.

.B ddcutil-service
is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2, or (at your option) any
later version.



